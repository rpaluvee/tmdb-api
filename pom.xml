<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cinemadice</groupId>
    <artifactId>tmdb-api</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <properties>
        <java.version>8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- General compiler additions -->
        <lombok.version>1.18.10</lombok.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>

        <!-- Compile time dependencies -->
        <gson.version>2.8.6</gson.version>
        <okhttp.version>4.3.1</okhttp.version>

        <!-- Test dependencies -->
        <junit.jupiter.version>5.6.0</junit.jupiter.version>
        <mockito-junit-jupiter.version>2.23.0</mockito-junit-jupiter.version>
        <mockwebserver.version>4.4.0</mockwebserver.version>
        <surefire.version>2.22.0</surefire.version>
        <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>

        <!-- Static analysis tools -->
        <checkstyle-maven-plugin.version>3.1.0</checkstyle-maven-plugin.version>
        <checkstyle.version>8.29</checkstyle.version>
        <spotbugs-maven-plugin.version>3.1.12.2</spotbugs-maven-plugin.version>
        <spotbugs.version>4.0.0</spotbugs.version>
    </properties>

    <dependencies>
        <!-- Compile time dependencies -->
        <!-- Lombok is used to reduce the amount of boilerplate Java code -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Gson is used to deserialize JSON objects -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <!-- OkHttp is used to make HTTPS requests to TMDb API -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <!-- JUnit Jupiter API is used for writing tests in JUnit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- JUnit Jupiter Engine is used to run JUnit 5 tests -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Mockito JUnit Jupiter is used for initializing mocks in JUnit 5 -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- OkHttp MockWebServer is used to mock TMDb API web server and its responses for unit testing -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>${mockwebserver.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Apache Maven Compiler Plugin is used to compile the source code -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <!-- Maven Surefire Plugin is used to execute unit tests in the maven test phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
            </plugin>
            <!-- Maven JaCoCo is used to generate code coverage reports -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven Checkstyle plugin is used to generate a report regarding the code style used in the maven
            validate phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle-maven-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>src/main/resources/checkstyle.xml</configLocation>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <id>checkstyle</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven SpotBugs plugin is used to run static analysis on the source code to find bugs -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>${spotbugs.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <excludeFilterFile>src/main/resources/spotbugs-exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
